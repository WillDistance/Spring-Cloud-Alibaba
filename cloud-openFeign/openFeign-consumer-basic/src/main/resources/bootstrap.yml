server:
  port: 8001
  servlet:
    context-path: /study

spring:
  application:
    name: openFeign-consumer-basic
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848

      discovery:
        server-addr: ${spring.cloud.nacos.server-addr} #Nacos服务注册中心地址
        namespace: 9a5a02e4-a451-4e06-8878-a610de1c2a97

      # nacos配置时dataId的默认组成格式：${spring.cloud.nacos.config.prefix}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}
      config:
        enabled: true # 是否开启nacos作为配置中心
        server-addr: ${spring.cloud.nacos.server-addr} #Nacos作为配置中心地址
        prefix: ${spring.application.name}
        file-extension: yaml # 配置文件的格式，指定yaml格式的配置 。目前只支持 properties 和 yaml 类型
        namespace: 9a5a02e4-a451-4e06-8878-a610de1c2a97 #命名空间：dev
        group: OPENFEIGN_PROVIDER_GROUP # 组


feign:
  client:
    default-to-properties: true # 是否以properties（yml）中的配置优先，默认为true
    config: # 注意default的配置、服务（这里的contextId1）的配置、配置类（FeignLogConfig.class） 这3者的优先级关系。
      # 默认情况是：服务的配置>default的配置>配置类 但是可以通过 feign.client.default-to-properties修改 为:配置类>服务的配置>default的配置
      default: # 默认配置
        decode404: true
        loggerLevel: basic
      getRequestFeignService: # 注意这个地方并不一定是服务的名称。如果@FeignClient没有配置contextId，则取value或者name
        loggerLevel: basic

  compression:  # 请求或响应GZIP压缩
    request:
      enabled: true # 开启请求压缩
      mime-types: text/xml, application/xml, application/json # 配置压缩支持的MIME TYPE
      min-request-size: 20480 # 配置压缩数据大小的下限
    response:
      enabled: true # 开启响应压缩
      useGzipDecoder: false # 启用要使用的默认 gzip 解码器。
  hystrix:
    enabled: false #如果为 true，则 OpenFeign 客户端将被 Hystrix 断路器包裹


logging:
  level:
    # feign日志以什么级别监控哪个接口
    com.study.service: debug